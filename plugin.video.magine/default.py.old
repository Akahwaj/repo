#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys
import urlparse
import xbmcgui
import xbmcplugin
import xbmcaddon
import xbmc
import xbmcvfs
import urllib, urllib2, socket, cookielib, re, os, shutil,json
import md5
import hashlib
import base64
import time,cookielib
cj = cookielib.CookieJar()

def getUrl(url,data="x",header=[]):
   global cj
   opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))
   userAgent = 'Coralie/1.7.2-2016081207(SM-G900F; Android; 6.0.1; DeviceId c248c629af1fe0a8c46b95668064c1d2952a9e91d27bccc3c5d584c2f7553a; Token Tvoli/ec9ab8acf27f14cacfefbf1087463fd3aeacdca4; VersionCheck)'
   header.append(('User-Agent', userAgent))
   header.append(('Accept', "*/*"))
   header.append(('Content-Type', "application/json;charset=UTF-8"))
   header.append(('Accept-Encoding', "plain"))
   header.append(('Origin', "https://magine.com"))
   opener.addheaders = header
   try:
      if data!="x" :
         request=urllib2.Request(url)
         cj.add_cookie_header(request)
         content=opener.open(request,data=data).read()
      else:
         content=opener.open(url).read()
   except urllib2.HTTPError as e:
       print e
   opener.close()
   return content

values = {
      'accessKey' : 'test1t',
      'identity' : 'andreas@vogler.name'
    }





#data="clientId="+ session +"&mk=HTML5&md=PC&userId="+ userid
#content=getUrl("https://magine.com/api/drm/v4/license/widevine",data=data,Authorization=session,userId=userid)

# Setting Variablen Des Plugins
global debuging
base_url = sys.argv[0]
addon_handle = int(sys.argv[1])
args = urlparse.parse_qs(sys.argv[2][1:])
addon = xbmcaddon.Addon()
# Lade Sprach Variablen
translation = addon.getLocalizedString
debuging=""
# Es geht um Videos
xbmcplugin.setContent(addon_handle, 'movies')
baseurl="http://www.br.de"
icon = xbmc.translatePath(xbmcaddon.Addon().getAddonInfo('path')+'/icon.png').decode('utf-8')
useThumbAsFanart=addon.getSetting("useThumbAsFanart") == "true"
defaultBackground = ""
defaultThumb = ""
global bitrate
bitrate=addon.getSetting("bitrate")
global kurzvideos
kurzvideos=addon.getSetting("kurzvideos")

profile    = xbmc.translatePath( addon.getAddonInfo('profile') ).decode("utf-8")
temp       = xbmc.translatePath( os.path.join( profile, 'temp', '') ).decode("utf-8")

if xbmcvfs.exists(temp):
  shutil.rmtree(temp)
xbmcvfs.mkdirs(temp)

def debug(content):
    log(content, xbmc.LOGDEBUG)
    
def notice(content):
    log(content, xbmc.LOGNOTICE)

def log(msg, level=xbmc.LOGNOTICE):
    addon = xbmcaddon.Addon()
    addonID = addon.getAddonInfo('id')
    xbmc.log('%s: %s' % (addonID, msg), level) 
    
  
def addLink(name, url, mode, iconimage, duration="", desc="", genre=''):
	u = sys.argv[0]+"?url="+urllib.quote_plus(url)+"&mode="+str(mode)
	ok = True
	liz = xbmcgui.ListItem(name, iconImage=defaultThumb, thumbnailImage=iconimage)
	liz.setInfo(type="Video", infoLabels={"Title": name, "Plot": desc, "Genre": genre})
	liz.setProperty('IsPlayable', 'true')
	liz.addStreamInfo('video', { 'duration' : duration })
	liz.setProperty("fanart_image", iconimage)
	#liz.setProperty("fanart_image", defaultBackground)
	xbmcplugin.setContent(int(sys.argv[1]), 'tvshows')
	ok = xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]), url=u, listitem=liz)
	return ok

def playlive(url):    
  values = {
      'accessKey' : 'kodiTV',
      'identity' : 'andreas@vogler.name'
    }
  data = json.dumps(values)
  #content=getUrl("https://magine.com/signin")
  content=getUrl("https://magine.com/api/login/v1/auth/magine",data=data)
  #{"sessionId":"16bb3ce0-ee1d-11e5-a223-010000000094","openId":"andreas@vogler.name","registered":true,"newUser":false,"userId":"007GYM8USR"}
  struktur = json.loads(content)
  session=struktur['sessionId']
  userid=struktur['userId']
  header=[]
  header.append (("Authorization","Bearer "+session))
  header.append (("UserId",userid))
  content=getUrl("https://magine.com/api/your-tv/v1/sections",header=header)
  struktur = json.loads(content)
  debug("----- struktur -----------")
  debug(struktur)
  selection=struktur["sections"][0]["sectionItems"][0]["subsection"]["items"]
  channelid=selection[0]["airing"]["channel"]["id"]  
  times=selection[0]["airing"]["id"]

  newurl="https://magine.com/api/contenturl/v1/channel/"+str(channelid)+"/airing/"+str(times)
  content=getUrl(newurl,header=header)
  struktur = json.loads(content)
  
  print "DASH Magine URL:" +struktur["dash"]
  print "License Magine URL : https://magine.com/api/drm/v4/license/widevine"

  userAgent = "Coralie/1.7.2-2016081207(SM-G900F; Android; 6.0.1; DeviceId c248c629af1fe0a8c46b95668064c1d2952a9e91d27bccc3c5d584c2f7553a; Token Tvoli/ec9ab8acf27f14cacfefbf1087463fd3aeacdca4; VersionCheck)"
  listitem = xbmcgui.ListItem(path=struktur["dash"])        
  lic_header="|Authorization=Bearer%20"+session+"&UserId=" +userid+"&Magine-ChannelId=" +channelid+"&Magine-Md=PC-Awesomesauce"+"&Magine-Mk=HTML5"+"&Magine-ClientId=c060c1bf-d805-4feb-74d4-d8241e27d836"+"&Magine-ProgramId="+times+"|R{SSM}|"
  listitem.setProperty('inputstream.mpd.license_type', 'com.widevine.alpha')
  listitem.setProperty('inputstream.mpd.license_key', "https://magine.com/api/drm/v4/license/widevine"+lic_header)
  listitem.setProperty('inputstream.mpd.license_data', base64.b64encode(b'\x08\x01\x12\x10'+'{KID}'+b'\x1A\x05'+'tvoli"'+b'\x1B'+'channel.'+channelid+'.'+times+'*'+b'\x02'+'SD2'+b'\x00'))
  listitem.setProperty('inputstreamaddon', 'inputstream.mpd')
  xbmcplugin.setResolvedUrl(addon_handle, True, listitem)
    #addLink("Testvideo" , url="rtmp://artestras.fc.llnwd.net/artestras app=artestras swfUrl=http://www.arte.tv/arte_vp/jwplayer6/jwplayer.flash.6.11.4923.swf pageURL=http://www.arte.tv/guide/de/live", mode="playlive", iconimage="",duration="",desc="")    
    #xbmcplugin.setResolvedUrl(addon_handle, True, listitem)

def parameters_string_to_dict(parameters):
	paramDict = {}
	if parameters:
		paramPairs = parameters[1:].split("&")
		for paramsPair in paramPairs:
			paramSplits = paramsPair.split('=')
			if (len(paramSplits)) == 2:
				paramDict[paramSplits[0]] = paramSplits[1]
	return paramDict
  
   


params = parameters_string_to_dict(sys.argv[2])
mode = urllib.unquote_plus(params.get('mode', ''))
url = urllib.unquote_plus(params.get('url', ''))
name = urllib.unquote_plus(params.get('name', ''))
showName = urllib.unquote_plus(params.get('showName', ''))
hideShowName = urllib.unquote_plus(params.get('hideshowname', '')) == 'True'
nextPage = urllib.unquote_plus(params.get('nextpage', '')) == 'True'
einsLike = urllib.unquote_plus(params.get('einslike', '')) == 'True'    

# Haupt Menu Anzeigen      
if mode is '':    
    addLink("Testvideo" , url="-", mode="playlive", iconimage="",duration="",desc="")    
    xbmcplugin.endOfDirectory(addon_handle,succeeded=True,updateListing=False,cacheToDisc=True)
else:  
  if mode == 'playlive':
          playlive(url)     
